services:
  node:
    image: node:latest
    tty: true
    stdin_open: true
    working_dir: /home/node
    entrypoint: sh -c
    command: '"npm install && npm run start:dev "'
    depends_on:
      - mongo
      - database
    env_file:
      - .env.local
    expose:
      - 5001
    ports:
      - '5001:5001'
    volumes:
      - ./:/home/node # Le dossier backend
      - ../../../Domain:/Domain # Montage explicite du Domain
      - ../../../Application:/Application # Montage explicite de l'Application
      - ../../../Infrastructure:/Infrastructure # Montage explicite de l'Infrastructure

  postgres:
    image: postgres:16
    env_file:
      - .env.local
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  database:
    image: adminer
    restart: always
    depends_on:
      - postgres
      - mongo
    ports:
      - '8080:8080'

  mongo:
    image: mongo
    restart: unless-stopped
    env_file:
      - .env.local
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: cleanCodeDatabase
    volumes:
      - data-mongo:/data/db
      - ./mongo-seed.js:/docker-entrypoint-initdb.d/mongo-seed.js
    ports:
      - '27017:27017'

volumes:
  db_data:
  data-mongo:
